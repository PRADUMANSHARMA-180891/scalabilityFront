{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const loginUser = createAsyncThunk(\"fetchLogin\", async (data, {\n  rejectWithValue\n}) => {\n  try {\n    const res = await fetch(`http://localhost:8000/user/postlogin`, {\n      method: 'POST',\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        data\n      })\n    });\n    if (!res.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return res === null || res === void 0 ? void 0 : res.json();\n  } catch (error) {\n    rejectWithValue(error.res.data);\n  }\n});\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    isLoading: false,\n    user: null,\n    isError: false,\n    errorMessage: null\n  },\n  extraReducers: builder => {\n    builder.addCase(loginUser.pending, state => {\n      state.isLoading = true;\n      state.isError = false;\n      state.errorMessage = null;\n    });\n    builder.addCase(loginUser.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.user = action.payload;\n    });\n    builder.addCase(loginUser.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.errorMessage = action.error.message;\n    });\n  }\n});\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","loginUser","data","rejectWithValue","res","fetch","method","headers","body","JSON","stringify","ok","Error","json","error","authSlice","name","initialState","isLoading","user","isError","errorMessage","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["C:/Users/econs/OneDrive/Documents/scalability_frontend/admin-dashboard/src/pages/auth/AuthSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nexport const loginUser = createAsyncThunk(\"fetchLogin\", async (data,{ rejectWithValue }) => {\r\n    try {\r\n        const res = await fetch(`http://localhost:8000/user/postlogin`,{\r\n            method : 'POST',\r\n            headers : {\r\n                \"Content-type\" : \"application/json\"\r\n            },\r\n            body: JSON.stringify({data})\r\n        });\r\n        if (!res.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n        return res?.json();    \r\n    } catch (error) {\r\n        rejectWithValue(error.res.data);\r\n    }\r\n    \r\n});\r\n\r\nconst authSlice = createSlice({\r\n    name: \"auth\",\r\n    initialState: {\r\n        isLoading: false,\r\n        user: null,\r\n        isError: false,\r\n        errorMessage: null,\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(loginUser.pending, (state) => {\r\n            state.isLoading = true;\r\n            state.isError = false;\r\n            state.errorMessage = null;\r\n        });\r\n        builder.addCase(loginUser.fulfilled, (state, action) => {\r\n            state.isLoading = false;\r\n            state.user = action.payload;\r\n        });\r\n        builder.addCase(loginUser.rejected, (state, action) => {\r\n            state.isLoading = false;\r\n            state.isError = true;\r\n            state.errorMessage = action.error.message;\r\n        });\r\n    }\r\n});\r\n\r\nexport default authSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,OAAO,MAAMC,SAAS,GAAGD,gBAAgB,CAAC,YAAY,EAAE,OAAOE,IAAI,EAAC;EAAEC;AAAgB,CAAC,KAAK;EACxF,IAAI;IACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,sCAAqC,EAAC;MAC3DC,MAAM,EAAG,MAAM;MACfC,OAAO,EAAG;QACN,cAAc,EAAG;MACrB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACR;MAAI,CAAC;IAC/B,CAAC,CAAC;IACF,IAAI,CAACE,GAAG,CAACO,EAAE,EAAE;MACT,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAClD;IACA,OAAOR,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAES,IAAI,CAAC,CAAC;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZX,eAAe,CAACW,KAAK,CAACV,GAAG,CAACF,IAAI,CAAC;EACnC;AAEJ,CAAC,CAAC;AAEF,MAAMa,SAAS,GAAGhB,WAAW,CAAC;EAC1BiB,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACVC,SAAS,EAAE,KAAK;IAChBC,IAAI,EAAE,IAAI;IACVC,OAAO,EAAE,KAAK;IACdC,YAAY,EAAE;EAClB,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CAACC,OAAO,CAACvB,SAAS,CAACwB,OAAO,EAAGC,KAAK,IAAK;MAC1CA,KAAK,CAACR,SAAS,GAAG,IAAI;MACtBQ,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,YAAY,GAAG,IAAI;IAC7B,CAAC,CAAC;IACFE,OAAO,CAACC,OAAO,CAACvB,SAAS,CAAC0B,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACpDF,KAAK,CAACR,SAAS,GAAG,KAAK;MACvBQ,KAAK,CAACP,IAAI,GAAGS,MAAM,CAACC,OAAO;IAC/B,CAAC,CAAC;IACFN,OAAO,CAACC,OAAO,CAACvB,SAAS,CAAC6B,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACnDF,KAAK,CAACR,SAAS,GAAG,KAAK;MACvBQ,KAAK,CAACN,OAAO,GAAG,IAAI;MACpBM,KAAK,CAACL,YAAY,GAAGO,MAAM,CAACd,KAAK,CAACiB,OAAO;IAC7C,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AAEF,eAAehB,SAAS,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}