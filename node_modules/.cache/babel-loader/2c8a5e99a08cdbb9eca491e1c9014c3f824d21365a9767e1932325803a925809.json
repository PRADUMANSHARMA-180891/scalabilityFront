{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\n// Async thunk to create a new period\nexport const createPeriod = createAsyncThunk('period/createPeriod', async (periodData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post('http://localhost:8000/period/create', periodData);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\n\n// Async thunk to fetch all periods\nexport const fetchPeriods = createAsyncThunk('period/fetchPeriods', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.get('http://localhost:8000/periods');\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nconst periodSlice = createSlice({\n  name: 'period',\n  initialState: {\n    periods: [],\n    loading: false,\n    error: null,\n    lastCreatedPeriodId: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(createPeriod.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(createPeriod.fulfilled, (state, action) => {\n      state.loading = false;\n      state.periods.push(action.payload);\n      state.lastCreatedPeriodId = action.payload.id; // Assuming action.payload contains the newly created period with an 'id' field\n    }).addCase(createPeriod.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }).addCase(fetchPeriods.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchPeriods.fulfilled, (state, action) => {\n      state.loading = false;\n      state.periods = action.payload;\n      state.lastCreatedPeriodId = action.payload[action.payload.length - 1].id; // Get the latest period ID\n    }).addCase(fetchPeriods.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport default periodSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","createPeriod","periodData","rejectWithValue","response","post","data","error","fetchPeriods","_","get","periodSlice","name","initialState","periods","loading","lastCreatedPeriodId","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","push","payload","id","rejected","length","reducer"],"sources":["C:/Users/econs/OneDrive/Documents/scalability_frontend/admin-dashboard/src/pages/plusIcon/updateKPI/PeriodSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\n// Async thunk to create a new period\r\nexport const createPeriod = createAsyncThunk(\r\n  'period/createPeriod',\r\n  async (periodData, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:8000/period/create', periodData);\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\n// Async thunk to fetch all periods\r\nexport const fetchPeriods = createAsyncThunk(\r\n  'period/fetchPeriods',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get('http://localhost:8000/periods');\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nconst periodSlice = createSlice({\r\n  name: 'period',\r\n  initialState: {\r\n    periods: [],\r\n    loading: false,\r\n    error: null,\r\n    lastCreatedPeriodId: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(createPeriod.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(createPeriod.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.periods.push(action.payload);\r\n        state.lastCreatedPeriodId = action.payload.id; // Assuming action.payload contains the newly created period with an 'id' field\r\n      })\r\n      .addCase(createPeriod.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      .addCase(fetchPeriods.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchPeriods.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.periods = action.payload;\r\n        state.lastCreatedPeriodId = action.payload[action.payload.length - 1].id; // Get the latest period ID\r\n      })\r\n      .addCase(fetchPeriods.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default periodSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}