{"ast":null,"code":"// features/kpi/kpiSlice.js\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\n// Async thunk to fetch KPIs\nexport const fetchKPIs = createAsyncThunk('kpi/fetchKPIs', async () => {\n  const response = await axios.get('http://localhost:8000/kpi/get');\n  return response.data;\n});\nexport const createKpi = createAsyncThunk('task/createTask', async (KpiData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post('http://localhost:8000/kpi/create', KpiData);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\n// update Kpi \nexport const updateKpi = createAsyncThunk(\"auth/updateKpi\", async ({\n  Id,\n  ...formData\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const res = await fetch(`http://localhost:8000/kpi/update/${Id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    });\n    if (!res.ok) {\n      throw new Error(\"Network response was not ok\");\n    }\n    return res.json();\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\n// delete Kpi\nexport const deleteKpi = createAsyncThunk(\"deleteKpi\", async (id, {\n  rejectWithValue\n}) => {\n  try {\n    const res = await fetch(`http://localhost:8000/company/deletecompany/${id}`, {\n      method: \"DELETE\"\n    });\n    if (!res.ok) {\n      throw new Error(\"Something went wrong while deleting company data\");\n    }\n    return id; // Return the ID of the deleted company\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nconst kpiSlice = createSlice({\n  name: 'kpi',\n  initialState: {\n    kpi: [],\n    status: 'idle',\n    // idle | loading | succeeded | failed\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(createKpi.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(createKpi.fulfilled, (state, action) => {\n      state.loading = false;\n      state.kpi.push(action.payload);\n    }).addCase(createKpi.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }).addCase(fetchKPIs.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchKPIs.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.kpi = action.payload;\n    }).addCase(fetchKPIs.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    }).addCase(updateKpi.pending, state => {\n      state.status = 'loading';\n    }).addCase(updateKpi.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.kpi = action.payload;\n    }).addCase(updateKpi.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nexport default kpiSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchKPIs","response","get","data","createKpi","KpiData","rejectWithValue","post","error","updateKpi","Id","formData","res","fetch","method","headers","body","JSON","stringify","ok","Error","json","message","deleteKpi","id","kpiSlice","name","initialState","kpi","status","reducers","extraReducers","builder","addCase","pending","state","loading","fulfilled","action","push","payload","rejected","reducer"],"sources":["C:/Users/econs/OneDrive/Documents/scalability_frontend/admin-dashboard/src/pages/adminstrastion/kpi/KpiSlice.js"],"sourcesContent":["// features/kpi/kpiSlice.js\r\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\n// Async thunk to fetch KPIs\r\nexport const fetchKPIs = createAsyncThunk('kpi/fetchKPIs', async () => {\r\n  const response = await axios.get('http://localhost:8000/kpi/get');\r\n  return response.data;\r\n});\r\n\r\nexport const createKpi = createAsyncThunk(\r\n    'task/createTask',\r\n    async (KpiData, { rejectWithValue }) => {\r\n      try {\r\n        const response = await axios.post('http://localhost:8000/kpi/create', KpiData);\r\n        return response.data;\r\n      } catch (error) {\r\n        return rejectWithValue(error.response.data);\r\n      }\r\n    }\r\n  );\r\n // update Kpi \r\n export const updateKpi = createAsyncThunk(\r\n    \"auth/updateKpi\",\r\n    async ({ Id, ...formData }, { rejectWithValue }) => {\r\n      try {\r\n        const res = await fetch(`http://localhost:8000/kpi/update/${Id}`, {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(formData),\r\n        });\r\n        if (!res.ok) {\r\n          throw new Error(\"Network response was not ok\");\r\n        }\r\n        return res.json();\r\n      } catch (error) {\r\n        return rejectWithValue(error.message);\r\n      }\r\n    }\r\n  );\r\n// delete Kpi\r\nexport const deleteKpi = createAsyncThunk(\r\n    \"deleteKpi\",\r\n    async (id, { rejectWithValue }) => {\r\n      try {\r\n        const res = await fetch(`http://localhost:8000/company/deletecompany/${id}`, {\r\n          method: \"DELETE\",\r\n        });\r\n        if (!res.ok) {\r\n          throw new Error(\"Something went wrong while deleting company data\");\r\n        }\r\n        return id; // Return the ID of the deleted company\r\n      } catch (error) {\r\n        return rejectWithValue(error.message);\r\n      }\r\n    }\r\n  );\r\nconst kpiSlice = createSlice({\r\n  name: 'kpi',\r\n  initialState: {\r\n    kpi: [],\r\n    status: 'idle', // idle | loading | succeeded | failed\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n     .addCase(createKpi.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(createKpi.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.kpi.push(action.payload);\r\n      })\r\n      .addCase(createKpi.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      .addCase(fetchKPIs.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchKPIs.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.kpi = action.payload;\r\n      })\r\n      .addCase(fetchKPIs.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.error.message;\r\n      })\r\n      .addCase(updateKpi.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(updateKpi.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.kpi = action.payload;\r\n      })\r\n      .addCase(updateKpi.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.error.message;\r\n      });\r\n  },\r\n});\r\n\r\nexport default kpiSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}